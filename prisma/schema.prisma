generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  BUYER
  DEVELOPER
  OWNER
  BROKER
  ADMIN
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
}

model User {
  id          String   @id @default(uuid())
  email       String?  @unique
  phoneNumber String   @unique
  role        Role     @default(BUYER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Buyer     Buyer?
  Developer Developer?
  Owner     Owner?
  Broker    Broker?

  payments Payment[]

  @@index([phoneNumber])
}

model Buyer {
  id       String  @id @default(uuid()) @map("user_id")
  name     String?
  lastName String?
  user     User    @relation(fields: [id], references: [id])
}

model Developer {
  id           String  @id @default(uuid()) @map("user_id")
  user         User    @relation(fields: [id], references: [id])
  isLicensed   Boolean
  hasWafi      Boolean
  acceptsBanks Boolean
}

model Owner {
  id          String  @id @default(uuid()) @map("user_id")
  user        User    @relation(fields: [id], references: [id])
  companyName String?
}

model Broker {
  id            String  @id @default(uuid()) @map("user_id")
  user          User    @relation(fields: [id], references: [id])
  isLicensed    Boolean
  licenseNumber String
}

model Payment {
  id                    String        @id @default(cuid())
  userId                String
  amount                Float
  currency              String
  status                PaymentStatus
  stripePaymentIntentId String        @unique
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  user                  User          @relation(fields: [userId], references: [id])
}
